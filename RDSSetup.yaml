Parameters:
  
  DBInstanceSize:
    Description: "The instance size of the database eg. db.m5.large"
    Type: String
    Default: "db.t3.micro"
  
  DBInstanceStorageSize:
    Description: "Size in Gib for the database storage"
    MinValue: 20
    MaxValue: 65536
    Type: Number 
    Default: 20

  DBInstanceStorageType:
    Description: "Storage class of DB instance, can be standard, gp2 or io1"
    Type: String 
    Default: "gp2"

  DBInstanceStorageEncrypted:
    AllowedValues:
      - "true"
      - "false"
    Description: "Is the data to be encrypted at rest true or false"
    Type: String
    Default: "false" 

  DBInstanceBackupRetentionPeriod:
    Description: "The backup retention period in days"
    Type: Number 
    Default: 1

  DBInstanceId:
    Description: "A unique name for the RDS instance in the deployed region"
    Type: String 
    Default: "TestDBInstance"

  DBInstanceName: 
    Description: "The name of the postgres database"
    Type: String 
    Default: "TestDBInstance"

  DBInstanceUsername:
    Description: "The database username"
    Type: String 

  DBInstancePassword: 
    Description: "The database password"
    Type: String 

  DBInstanceMultiAz:
    AllowedValues:
      - "true"
      - "false"
    Description: "Is this a MultiAz deployment true or false"
    Type: String
    Default: "true"

  DBInstancePubliclyAccessible:
    AllowedValues:
      - "true"
      - "false"
    Description: "Is this a publicaly accessable B true of false"
    Type: String
    Default: "true" 

  DBInstancePreferredBackupWindow:
    Description: "The time of day the backup is to occur: must be in format hh24:mi-hh24:mi"
    Type: String
    Default: "00:00-01:00"

  DBInstanceAutoMinorVersionUpgrade:
    AllowedValues:
      - "true"
      - "false"
    Description: "Allow AWS to automatically upgrade minor postgres version true or false"
    Type: String 
    Default: "true"

  DBInstancePrerredMaintenacneWindow:
    Description: "The preffered time for DB maintance such as minor postgres upgrades format ddd:hh24:mi-ddd:hh24:mi"
    Type: String 
    Default: "Sun:23:00-Sun:23:59"

Resources:

  DBVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      Tags:
        - Key: stack
          Value: !Sub AWS::StackName
        - Key: Name 
          Value: "DB-VPC"

  DBPublicSubnet1:
    Type: AWS::EC2::Subnet 
    Properties:
      VpcId: !Ref DBVPC
      CidrBlock: "10.0.0.0/24"
      AvailabilityZone: !Sub "${AWS::Region}a" # e.g us-east-1a
      Tags:
        - Key: Name 
          Value: "Public DB 10.0.0.0/24"
        - Key: stack 
          Value: !Sub AWS::StackName 
  
  DBPublicSubnet2:
    Type: AWS::EC2::Subnet 
    Properties:
      VpcId: !Ref DBVPC
      CidrBlock: "10.0.2.0/24"
      AvailabilityZone: !Sub "${AWS::Region}b" # e.g us-east-1b 
      Tags:
        - Key: Name 
          Value: "Public DB 10.0.2.0/24"
        - Key: stack 
          Value: !Sub AWS::StackName
  
  DBPrivateSubnet1:
    Type: AWS::EC2::Subnet 
    Properties: 
      VpcId: !Ref DBVPC 
      CidrBlock: "10.0.1.0/24"
      AvailabilityZone: !Sub "${AWS::Region}a" # e.g us-east-1a
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: "Private DB 10.0.1.0/24"
        - Key: stack 
          Value: !Sub AWS::StackName
  
  DBPrivateSubnet2:
    Type: AWS::EC2::Subnet 
    Properties: 
      VpcId: !Ref DBVPC 
      CidrBlock: "10.0.3.0/24"
      AvailabilityZone: !Sub "${AWS::Region}b" # e.g us-east-1b
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: "Private DB 10.0.3.0/24"
        - Key: stack 
          Value: !Sub AWS::StackName 
  
  DBIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: stack 
          Value: !Sub AWS::StackName
        - Key: Name 
          Value: DB-IGW
  
  DBGatewayAttachement:
    Type: AWS::EC2::VPCGatewayAttachment 
    Properties:
      InternetGatewayId: !Ref DBIGW 
      VpcId: !Ref DBVPC
  
  DBPublicRouteTable:
    Type: AWS::EC2::RouteTable 
    Properties:
      VpcId: !Ref DBVPC
      Tags:
        - Key: Name 
          Value: DBPublicRouteTable 
        - Key: stack 
          Value: !Sub AWS::StackName
  
  DBPrivateRouteTable:
    Type: AWS::EC2::RouteTable 
    Properties: 
      VpcId: !Ref DBVPC
      Tags:
        - Key: Name 
          Value: DBPrivateRouteTable 
        - Key: stack 
          Value: !Sub AWS::StackName 
  
  DBPublicRoute:
    Type: AWS::EC2::Route 
    Properties:
      RouteTableId: !Ref DBPublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref DBIGW
  
  DBPublicSubnet1RouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation 
    Properties: 
      SubnetId: !Ref DBPublicSubnet1 
      RouteTableId: !Ref DBPublicRouteTable
  
  DBPublicSubnet2RouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation 
    Properties: 
      SubnetId: !Ref DBPublicSubnet2 
      RouteTableId: !Ref DBPublicRouteTable
  
  DBPrivateSubnet1RouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation 
    Properties: 
      SubnetId: !Ref DBPrivateSubnet1
      RouteTableId: !Ref DBPrivateRouteTable
  
  DBPrivateSubnet2RouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation 
    Properties: 
      SubnetId: !Ref DBPrivateSubnet2 
      RouteTableId: !Ref DBPrivateRouteTable 
   
  DBPostgresSecurityGroup:
    Type: AWS::EC2::SecurityGroup 
    Properties: 
      GroupDescription: "Allow Inbound Postgres"
      GroupName: "Web DMZ DB"
      VpcId: !Ref DBVPC 
      SecurityGroupIngress:
        - IpProtocol: tcp 
          FromPort: 5432
          ToPort: 5432
          CidrIp: 0.0.0.0/0 
   
  DBPublicSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup 
    Properties:
      DBSubnetGroupDescription: "DB Public subnet group"
      DBSubnetGroupName: "DB public subnet group"
      SubnetIds: 
        - !Ref DBPublicSubnet1
        - !Ref DBPublicSubnet2 
      Tags:
        - Key: stack 
          Value: !Sub AWS::StackName

  DBPrivateSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup 
    Properties:
      DBSubnetGroupDescription: "DB Private subnet group"
      DBSubnetGroupName: "DB private subnet group"
      SubnetIds:
        - !Ref DBPrivateSubnet1 
        - !Ref DBPrivateSubnet2
      Tags: 
        - Key: stack 
          Value: !Sub AWS::StackName 

  DBSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup 
    Properties: 
      EC2VpcId: !Ref DBVPC
      GroupDescription: "postgres DB ingress from external ip"
      DBSecurityGroupIngress: 
        - CIDRIP: "0.0.0.0/0"

  DBRdsInstance:
    Type: AWS::RDS::DBInstance 
    Properties:
      Engine: postgres 
      DBInstanceClass: !Ref DBInstanceSize
      MultiAZ: !Ref DBInstanceMultiAz
      StorageType: !Ref DBInstanceStorageType
      AllocatedStorage: !Ref DBInstanceStorageSize
      DBInstanceIdentifier: !Ref DBInstanceId
      DBName: !Ref DBInstanceName
      MasterUsername: !Ref DBInstanceUsername 
      MasterUserPassword: !Ref DBInstancePassword
      DBSubnetGroupName: !Ref DBPublicSubnetGroup
      PubliclyAccessible: !Ref DBInstancePubliclyAccessible
      VPCSecurityGroups: 
        - !Ref DBPostgresSecurityGroup
      BackupRetentionPeriod: !Ref DBInstanceBackupRetentionPeriod
      StorageEncrypted: !Ref DBInstanceStorageEncrypted
      AutoMinorVersionUpgrade: !Ref DBInstanceAutoMinorVersionUpgrade
      PreferredBackupWindow: !Ref DBInstancePreferredBackupWindow
      PreferredMaintenanceWindow: !Ref DBInstancePrerredMaintenacneWindow
      EnableCloudwatchLogsExports:
        - "postgresql"
        - "upgrade"

Outputs: 
  DBURI: 
    Description: "The URI endpoint for the DB instance"
    Value: !GetAtt DBRdsInstance.Endpoint.Address
