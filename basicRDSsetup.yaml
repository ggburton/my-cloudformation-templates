Resources:
  DatabaseVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      Tags:
        - Key: stack
          Value: db-stack
  DatabasePublicSubnet:
    Type: AWS::EC2::Subnet 
    Properties:
      VpcId: !GetAtt DatabaseVPC.VpcId
      CidrBlock: "10.0.0.0/24"
      Tags:
        - Key: Name 
          Value: "Public Database 10.0.0.0/24"
        - Key: stack 
          Value: db-stack
  DatabasePrivateSubnet:
    Type: AWS::EC2::Subnet 
    Properties: 
      VpcId: !GetAtt DatabaseVPC.VpcId 
      CidrBlock: "10.0.1.0/24"
      MapPublicIpOnLaunch: 'true'
      Tags:
        - Key: Name
          Value: "Private Database 10.0.1.0/24"
        - Key: stack 
          Value: db-stack 
  DatabaseIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: stack 
          Value: db-stack
        - Key: Name 
          Value: Database-IGW
  DatabaseGatewayAttachement:
    Type: AWS::EC2::VPCGatewayAttachment 
    Properties:
      InternetGatewayId: !GetAtt DatabaseIGW.InternetGatewayId 
      VpcId: !GetAtt DatabaseVPC.VpcId
  DatabaseRouteTable:
    Type: AWS::EC2::RouteTable 
    Properties:
      VpcId: !GetAtt DatabaseVPC.VpcId
      Tags:
        - Key: Name 
          Value: Database-RouteTable 
        - Key: stack 
          Value: db-stack 
  DatabasePublicRoute:
    Type: AWS::EC2::Route 
    Properties:
      RouteTableId: !GetAtt DatabaseRouteTable.RouteTableId
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !GetAtt DatabaseIGW.InternetGatewayId 
  DatabasePublicSubnetRouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation 
    Properties: 
      SubnetId: !GetAtt DatabasePublicSubnet.SubnetId 
      RouteTableId: !GetAtt DatabaseRouteTable.RouteTableId
  DatabaseWebDMZSecurityGroup:
    Type: AWS::EC2::SecurityGroup 
    Properties: 
      GroupDescription: "Web DMZ for Database app port 80/22"
      GroupName: "Web DMZ Database"
      VpcId: !GetAtt DatabaseVPC.VpcId 
      SecurityGroupIngress:
        - IpProtocol: tcp 
          FromPort: 80 
          ToPort: 80 
          CidrIp: 0.0.0.0/0 
        - IpProtocol: tcp 
          FromPort: 22 
          ToPort: 22 
          CidrIp: 0.0.0.0/0 
  DatabasePrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup 
    Properties:
      GroupDescription: "Database instance SG for Public to Private access"
      GroupName: "Database Private SG"
      VpcId: !GetAtt DatabaseVPC.VpcId
      SecurityGroupIngress: 
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22 
        CidrIp: 10.0.0.0/24
      - IpProtocol: tcp 
        FromPort: 5432
        ToPort: 5432
        CidrIp: 10.0.0.0/24 
